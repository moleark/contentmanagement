-- 图片文件，其他如PFD/音视频文件等也放在这个表中
TUID IMAGE (
    id,
    main caption char(100),
    main path char(100),
    main author ID [$user],
    main isValid tinyint default 1,
    main types ID MadiaType,
    stamp (create,update),
);

TUID MadiaType (
    id,
    main name char(50)
);

-- 使用者为方便管理，自行建立类别，自行分类
TUID IMGCat (
    id,
    main parent ID IMGCat,
    main name char(100),
    main isValid tinyint default 1
);

-- 
MAP ImageCat (
    key image ID IMAGE,
    key cat ID IMGCat
);


MAP SlideShow (
    key image ID IMAGE,
    types tinyint,
    caption char(100),
    description char(100),
    src text,
    sort tinyint
);


/** 搜索我的图片*/
QUERY SearchCat( 
    parent ID IMGCat
)
PAGE (
    id bigint desc,
    parent ID IMGCat,
    name char(100)
) {
    PAGE select p.id, p.parent, p.name
    from    IMGCat as p
    where   p.id < $pageStart and p.parent = parent
            and p.isValid = 1
    order by p.id desc
    limit $pageSize;
};



/** 搜索我的图片*/
QUERY SearchImage( key char(100), types int)
PAGE (
    id bigint desc,
    caption char(100),
    path char(100),
    author ID [$user],
    isValid tinyint,
    types ID MadiaType

) {
    var key2 char(102);
    set key2 = concat('%', key, '%');

    PAGE select p.id, p.caption, p.path, p.author, p.isValid, p.types
    from    IMAGE as p
    where   p.id < $pageStart 
            and ( p.types = types or (types = 0 and p.types <> 1) )
            and p.isValid = 1 and ( p.caption like key2 or key is null )
    order by p.id desc
    limit $pageSize;
};


/** 搜索我类型的图片*/
QUERY SearchCatImage( 
    key char(100),
    cat ID IMGCat
)
PAGE (
    id bigint desc,
    caption char(100),
    path char(100),
    author ID [$user],
    isValid tinyint 
) {
    var key2 char(102);
    set key2 = concat('%', key, '%');

    PAGE select p.id, p.caption, p.path, p.author, p.isValid
    from    IMAGE as p
            join ImageCat as c on p.id = c.image 
    where   p.id < $pageStart and c.cat = cat and p.isValid = 1 and ( p.caption like key2 or key is null )
    order by p.id desc
    limit $pageSize;
};

/** 搜索图片的类型*/
QUERY SearchImageCat( 
    image ID IMAGE
)
PAGE (
    id bigint desc,
    name char(100)
) {
    PAGE select p.id, p.name
    from    ImageCat as c
            join IMGCat as p on p.id = c.cat 
    where   c.image = image
    limit $pageSize;
};
 
QUERY SearchSlideShow ()
PAGE(
    id bigint desc,
    caption char(100),
    description char(100),
    image ID IMAGE,
    path char(100),
    author ID [$user],
    src text,
    sort tinyint,
    types tinyint
) {
    PAGE select  s.sort as id, s.caption, s.description, p.id as image, p.path, p.author, s.src, s.sort, s.types
    from    SlideShow as s 
            join IMAGE as p on s.image = p.id
    where   s.sort < $pageStart and p.isValid = 1
    order by s.sort desc
    limit $pageSize;
};


QUERY GetSlideShow ()
returns ret (
    image ID IMAGE,
    caption char(100),
    path char(100),
    author ID [$user],
    description char(100),
    src text,
    sort tinyint,
    types tinyint
) {
    into ret select p.id as image, s.caption, p.path, p.author, s.description, s.src, s.sort, s.types
    from    SlideShow as s 
            join IMAGE as p on s.image = p.id
    where   p.isValid = 1 and s.types = 1
    order by s.sort;
};


ACTION UpdateSlideShow(
    image ID IMAGE,
    types tinyint,
    caption text,
    description char(100),
    src text,
    sort tinyint
){
    BOOK SlideShow at(image) set types=types, caption = caption ,description= description, src=src, sort= sort ;
};

ACTION DeleteSlideShow(
    _image ID IMAGE
){
     delete from  SlideShow  where image = _image;
};